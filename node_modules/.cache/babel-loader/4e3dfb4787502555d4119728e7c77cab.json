{"ast":null,"code":"// import variables rather than use strings for 'type' to assist in error detection (typos etc)\nimport { CHANGE_SEARCH_FIELD, REQUEST_MONSTERS_PENDING, REQUEST_MONSTERS_SUCCESS, REQUEST_MONSTERS_FAIL } from 'constants.js'; // import { apiCall } from './api/api'\n\nexport const setSearchField = text => {\n  // console.log(text);\n  return {\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n  };\n}; // ordinarily redux expects an object to be returned by an action, reduxThunk middleware allows a function to be returned initially followed by the appropriate action\n\nexport const requestMonsters = () => dispatch => {\n  dispatch({\n    type: REQUEST_MONSTERS_PENDING\n  });\n  fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(data => dispatch({\n    type: REQUEST_MONSTERS_SUCCESS,\n    payload: data\n  })).catch(error => dispatch({\n    type: REQUEST_MONSTERS_FAIL,\n    payload: error\n  }));\n};","map":{"version":3,"sources":["/home/matt/code/matt-kukawski/monstrous-mates/src/actions.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_MONSTERS_PENDING","REQUEST_MONSTERS_SUCCESS","REQUEST_MONSTERS_FAIL","setSearchField","text","type","payload","requestMonsters","dispatch","fetch","then","response","json","data","catch","error"],"mappings":"AAAA;AACA,SACEA,mBADF,EAEEC,wBAFF,EAGEC,wBAHF,EAIEC,qBAJF,QAKO,cALP,C,CAMA;;AAEA,OAAO,MAAMC,cAAc,GAAIC,IAAD,IAAU;AACtC;AACA,SAAO;AACLC,IAAAA,IAAI,EAAEN,mBADD;AAELO,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CANM,C,CAQP;;AACA,OAAO,MAAMG,eAAe,GAAG,MAAOC,QAAD,IAAc;AACjDA,EAAAA,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACAS,EAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAIL,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEJ,wBAAR;AAAkCK,IAAAA,OAAO,EAAEO;AAA3C,GAAD,CAFxB,EAGGC,KAHH,CAGSC,KAAK,IAAIP,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEH,qBAAR;AAA+BI,IAAAA,OAAO,EAAES;AAAxC,GAAD,CAH1B;AAID,CANM","sourcesContent":["// import variables rather than use strings for 'type' to assist in error detection (typos etc)\nimport {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_MONSTERS_PENDING,\n  REQUEST_MONSTERS_SUCCESS,\n  REQUEST_MONSTERS_FAIL\n} from 'constants.js';\n// import { apiCall } from './api/api'\n\nexport const setSearchField = (text) => {\n  // console.log(text);\n  return {\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n  }\n}\n\n// ordinarily redux expects an object to be returned by an action, reduxThunk middleware allows a function to be returned initially followed by the appropriate action\nexport const requestMonsters = () => (dispatch) => {\n  dispatch({ type: REQUEST_MONSTERS_PENDING })\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(data => dispatch({ type: REQUEST_MONSTERS_SUCCESS, payload: data }))\n    .catch(error => dispatch({ type: REQUEST_MONSTERS_FAIL, payload: error }))\n}\n"]},"metadata":{},"sourceType":"module"}