{"ast":null,"code":"var _jsxFileName = \"/home/matt/code/matt-kukawski/monstrous-mates/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport 'index.css';\nimport App from 'containers/App';\nimport * as serviceWorker from 'serviceWorker';\nimport { searchMonsters, requestMonsters } from 'reducers';\nimport 'tachyons';\nconst logger = createLogger(); // combine reducers for use in initialising store\n\nconst rootReducer = combineReducers({\n  searchMonsters,\n  requestMonsters\n}); // const store = createStore(rootReducer);\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger)); // console.log(store);\n// Provider facilitates availablility of store to all children, saves having to manually pass down each level\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/matt/code/matt-kukawski/monstrous-mates/src/index.js"],"names":["React","ReactDOM","Provider","createStore","applyMiddleware","combineReducers","createLogger","thunkMiddleware","App","serviceWorker","searchMonsters","requestMonsters","logger","rootReducer","store","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,eAA/B;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,UAAhD;AACA,OAAO,UAAP;AAEA,MAAMC,MAAM,GAAGN,YAAY,EAA3B,C,CAEA;;AACA,MAAMO,WAAW,GAAGR,eAAe,CAAC;AAACK,EAAAA,cAAD;AAAiBC,EAAAA;AAAjB,CAAD,CAAnC,C,CACA;;AACA,MAAMG,KAAK,GAAGX,WAAW,CAACU,WAAD,EAAcT,eAAe,CAACG,eAAD,EAAkBK,MAAlB,CAA7B,CAAzB,C,CACA;AAEA;;AACAX,QAAQ,CAACc,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAGeE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHf,E,CAMA;AACA;AACA;;AACAR,aAAa,CAACS,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport 'index.css';\nimport App from 'containers/App';\nimport * as serviceWorker from 'serviceWorker';\nimport { searchMonsters, requestMonsters } from 'reducers';\nimport 'tachyons';\n\nconst logger = createLogger();\n\n// combine reducers for use in initialising store\nconst rootReducer = combineReducers({searchMonsters, requestMonsters})\n// const store = createStore(rootReducer);\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n// console.log(store);\n\n// Provider facilitates availablility of store to all children, saves having to manually pass down each level\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}